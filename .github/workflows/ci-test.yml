# Minimal CI workflow for Flask + Postgres
# See: https://docs.github.com/en/actions/guides/building-and-testing-python
name: CI Test

on:
  pull_request:
    branches:
      - main
      - dev
      - 'feature/**'
  push:
    branches:
      - main
      - dev
      - 'feature/**'

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
            POSTGRES_USER: ${{ vars.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB: ${{ vars.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "FLASK_APP=${{ vars.FLASK_APP }}" >> .env
          echo "FLASK_ENV=${{ vars.FLASK_ENV }}" >> .env
          echo "DATABASE_URL=postgresql://${{ vars.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@postgres:5432/${{ vars.POSTGRES_DB }}" >> .env
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r app/requirements.txt
          pip install flake8
        
      - name: Run lint
        run: |
          flake8 app tests

      - name: Run tests
        run: pytest tests/ -v
