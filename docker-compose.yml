services:
  flask_app:
    build: .
    container_name: flask_app
    ports:
      - "5000:5000"
    environment:
       FLASK_APP: ${FLASK_APP}
       FLASK_ENV: ${FLASK_ENV}
       SECRET_KEY: ${SECRET_KEY}
       DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./app:/app
    depends_on:
      db: 
        condition: service_healthy
    networks:
      - athena_network
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s    
      timeout: 5s      
      retries: 5       
      start_period: 30s 
  db:
    image: postgres:13
    container_name: postgres_db
    environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - athena_network
    healthcheck:
     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
     interval: 10s
     timeout: 5s
     retries: 5
  nginx:
    image: nginx:latest
    container_name: athena_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
       - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
       - ./nginx/cert.pem:/etc/nginx/ssl/cert.pem
       - ./nginx/key.pem:/etc/nginx/ssl/key.pem
    depends_on:
       flask_app:
         condition: service_healthy
    networks:
      - athena_network
      
volumes:
  db_data:

networks:
  athena_network:
    driver: bridge
